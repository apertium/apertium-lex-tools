#!/usr/bin/env python3

'''
Setup for SWIG Python bindings for lex-tools
'''
from distutils.core import Extension, setup
from sys import platform

compile_args = '@CXXFLAGS@'.split() + '@LTTOOLBOX_CFLAGS@'.split() + '@ICU_CFLAGS@'.split()
link_args = []
if platform == 'darwin':
    compile_args += ['-stdlib=libc++', '-mmacosx-version-min=10.7']
    link_args.append('-mmacosx-version-min=10.7')

def include(args):
	return args.replace('-I', '').split()

dirs = ['@top_srcdir@', '@top_srcdir@/src'] + include('@LTTOOLBOX_CFLAGS@') + include('@ICU_CFLAGS@') + include('@LIBXML_CFLAGS@')

apertium_lex_tools_module = Extension(
    name='_apertium_lex_tools',
    language='c++',
    sources=['apertium_lex_tools.i'],
    swig_opts=['-c++', '-I..', '-I@top_srcdir@/src', '-Wall'] + '@LTTOOLBOX_CFLAGS@'.split() + '@LIBXML_CFLAGS@'.split(),
    include_dirs=dirs,
    library_dirs=['@top_srcdir@/src/.libs'],
    libraries = ['apertium-lex-tools@VERSION_MAJOR@'],
    extra_compile_args=compile_args,
    extra_link_args=link_args,
)

setup(
    name='@PACKAGE@',
    version='@PACKAGE_VERSION@',
    description='SWIG interface to @PACKAGE_NAME@',
    long_description='SWIG interface to @PACKAGE_NAME@ for use in apertium-python',
    # TODO: author, maintainer, url
    author_email='@PACKAGE_BUGREPORT@',
    license='GPL-3.0+',
    maintainer_email='@PACKAGE_BUGREPORT@',
    ext_modules=[apertium_lex_tools_module],
    py_modules=['apertium_lex_tools'],
	data_files=[],
)
